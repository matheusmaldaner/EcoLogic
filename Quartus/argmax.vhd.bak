library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity argmax is
    generic (
        WIDTH : integer := 8      -- Width of each input segment
    );
    port (
        input_bus : in  STD_LOGIC_VECTOR(10 * WIDTH - 1 downto 0);
        max_index : out STD_LOGIC_VECTOR(3 downto 0)  -- 4 bits for 0-9 index
    );
end entity argmax;

architecture bhv of argmax is
    signal max_value : STD_LOGIC_VECTOR(WIDTH-1 downto 0);
    signal current_value : STD_LOGIC_VECTOR(WIDTH-1 downto 0);
    signal index : integer := 0;
begin
    process(input_bus)
        variable max_val : STD_LOGIC_VECTOR(WIDTH-1 downto 0);
        variable max_idx : integer := 0;
    begin
        max_val := (others => '0');
        
        -- Loop through each segment
        for i in 0 to 9 loop
            -- Extract current segment
            current_value := input_bus((i+1)*WIDTH-1 downto i*WIDTH);

            -- Compare current value with max_val
            if current_value > max_val then
                max_val := current_value;
                max_idx := i;
            end if;
        end loop;

        -- Assign the max index to the output
        max_index <= STD_LOGIC_VECTOR(to_unsigned(max_idx, max_index'length));
    end process;
end architecture bhv;
